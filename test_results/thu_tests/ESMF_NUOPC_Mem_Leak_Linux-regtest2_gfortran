Return-Path: <silverio.vasquez@noaa.gov>
Delivered-To: unknown
Received: from mail.cgd.ucar.edu (128.117.21.245:993) by bighorn.cgd.ucar.edu
  with IMAP4-SSL; 19 Mar 2020 21:18:39 -0000
X-Original-To: esmftest@cgd.ucar.edu
Delivered-To: esmftest@cgd.ucar.edu
Received: from vscanx2.ucar.edu (vscanx2.ucar.edu [128.117.64.142])
	by post2.cgd.ucar.edu (Postfix) with ESMTP id 78390156
	for <esmftest@cgd.ucar.edu>; Thu, 19 Mar 2020 08:45:52 -0600 (MDT)
Received: from mail-qk1-f197.google.com (mail-qk1-f197.google.com [209.85.222.197])
	by vscanx2.ucar.edu (Postfix) with ESMTPS id 421F31801D0D
	for <esmftest@cgd.ucar.edu>; Thu, 19 Mar 2020 08:45:52 -0600 (MDT)
Authentication-Results: vscanx2.ucar.edu;
	dkim=pass (2048-bit key) header.d=noaa.gov header.i=@noaa.gov header.b="AU4OBHHe"
Received: by mail-qk1-f197.google.com with SMTP id w124so2621488qkd.19
        for <esmftest@cgd.ucar.edu>; Thu, 19 Mar 2020 07:45:52 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:dkim-signature:date:to:subject:user-agent
         :mime-version:content-transfer-encoding:message-id:from;
        bh=2gnf7EsfhQvaVKbkx4MFxE4P5T4+1VMi6uAuk/+V7B0=;
        b=hLuxRJCkTo78RUGZYx6IoDDTqmqXYfe0bQr4YoDkECdLBjB5gdtcvLl0HkTvhEsjpX
         8xZyG0knwYi/JDftWLKCY2igWv74BMiyBkFRV6pCWvHhELUWcTH8L01fdJRF9KSKOoHV
         AzBl2ioUMpIJPwwXKWRntb8zlocD13JnVHa14CUD+31Wi6H68dMOdxprdiAjvEY3+ywe
         pcEzeSzFVR1dbkltKY4kjaATK8EjTCaSPUHB6kJNkus48oxevfTiH1qwBnOAWhMv+mxv
         cO28HzbEnpmbbBwzXjndR08x11sTeAIMcNaJf2s/fnN/vNSZBQ4KCYj0BfwuOOlR86jE
         Fwtw==
X-Gm-Message-State: ANhLgQ1ru3seOyznB5QaOmBmCAH8myVDaTNlCHUJ7qYbo/xFxO+/5IRg
	FQuOQwxJlRcpdIiWjd4J4Bl4gq0WnGnaYkSuNpbWRGhiI1Ccbu+zr30Oe8dXpmumFDR/IxdwIkx
	cdofLypIVIoJVBR9tzUvybw==
X-Received: by 2002:ac8:7b39:: with SMTP id l25mr3299275qtu.72.1584629151603;
        Thu, 19 Mar 2020 07:45:51 -0700 (PDT)
X-Received: by 2002:ac8:7b39:: with SMTP id l25mr3299167qtu.72.1584629150174;
        Thu, 19 Mar 2020 07:45:50 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; t=1584629150; cv=none;
        d=google.com; s=arc-20160816;
        b=pjCCvGp+EdvIRsqjuCS7S7X3driTknejyXEcmE+8+5ANdSYo0xdsXzTH3sWIhuJNTF
         oke6TEKI0CxeD8nbcvRV9CTsdHyLoiFCo6ZtTcLeWSHwBJqRZEOnr25mKoMvbBPgGv5B
         G+iKAMg2+CYluvQ5mXvxImOPob79OfbKa+SUk1agQLjHOxJXp27CFhH+Ji6urmJFeINq
         XA8X+jiga2DfmjvGupgNvKrhg5eNb92z9Wfdi3FKFZ2d1p0TEB1x79W5COJ7pq0xhoiL
         Cb27TymDxILmDv7sLD9E4x9IM4KTv6vGoQbRjS4QDE2IlK4cZUNZtuUn4EiyhyuHN8ZO
         +l8w==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=from:message-id:content-transfer-encoding:mime-version:user-agent
         :subject:to:date:dkim-signature;
        bh=2gnf7EsfhQvaVKbkx4MFxE4P5T4+1VMi6uAuk/+V7B0=;
        b=vpegu7peEmAS3f4kNI0VqLL6JCeJ0nYeFch4op+SNf6bdq4Z8+l8RWj4iKtrllsif4
         1yEljaQkpVOiXldm5BF5tkK6m5TKvYtoqXs4+oaKvU9RD0wDlWVCxkbw/AIjwTPZtUj2
         ghB4IEdVWGdPpQLHbsbLGcM7nTlDvFUDPENmpv3KWRsGOO7vD1w8Mt4JpckBrtkuvvFw
         WYJFrmSaY83bbsm1iynBQugOf/i5nBiwZvqfevUGtPWoLku4syeNJymk5Dmxf3iUzFOf
         pRTD991jKUCKpZfiSLjTdSrpGcZyYNUEdRGK1p+4WrkGHAK4bk8l8N3nS1G7NI+9r6uK
         STCg==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@noaa.gov header.s=google header.b=AU4OBHHe;
       spf=pass (google.com: domain of silverio.vasquez@noaa.gov designates 209.85.220.97 as permitted sender) smtp.mailfrom=silverio.vasquez@noaa.gov;
       dmarc=pass (p=REJECT sp=NONE dis=NONE) header.from=noaa.gov
Received: from mail-sor-f97.google.com (mail-sor-f97.google.com. [209.85.220.97])
        by mx.google.com with SMTPS id l19sor639343qtp.71.2020.03.19.07.45.50
        for <esmftest@cgd.ucar.edu>
        (Google Transport Security);
        Thu, 19 Mar 2020 07:45:50 -0700 (PDT)
Received-SPF: pass (google.com: domain of silverio.vasquez@noaa.gov designates 209.85.220.97 as permitted sender) client-ip=209.85.220.97;
Authentication-Results: mx.google.com;
       dkim=pass header.i=@noaa.gov header.s=google header.b=AU4OBHHe;
       spf=pass (google.com: domain of silverio.vasquez@noaa.gov designates 209.85.220.97 as permitted sender) smtp.mailfrom=silverio.vasquez@noaa.gov;
       dmarc=pass (p=REJECT sp=NONE dis=NONE) header.from=noaa.gov
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=noaa.gov; s=google;
        h=date:to:subject:user-agent:mime-version:content-transfer-encoding
         :message-id:from;
        bh=2gnf7EsfhQvaVKbkx4MFxE4P5T4+1VMi6uAuk/+V7B0=;
        b=AU4OBHHeeFQuBWblOiuJRKByygjn7tspgiKwddKY1SK4b8eQjuVBLbrY9Z5IGCoij9
         rqLpzMQFBYg02AbXuYoXiz/y7FR2tcSS6B3sbe7j/BeXbcyYfbS1P42EEe/k2r7efQkk
         IZqEYTHjrxtY18BZFJE7Des52SmkP5AgxtH8QatdzfLD2G2fhfoLBVG70oWs38KcGNJO
         BIMkb+nBnly+qBcwRUOQCgyaBpGvsVXAYpgGH/QONKDIXf61qEwlsD2RymKbtxm0AD39
         +ecd8MBKIpIFnrxXi3u7SD1s78MbyHK0KhrMdKUtXTB/8UDCnmYDLsqYppqrcobVMsS2
         UZYQ==
X-Google-Smtp-Source: ADFU+vvt/EmXdhyLa2bBtuw9w8IHe6i+mFnTBvoc6Mpxbf+FmZ4qkHlY9mZbP+q7Bz1vaMtkr1ldAbHTzZFM
X-Received: by 2002:ac8:3656:: with SMTP id n22mr3302230qtb.296.1584629149694;
        Thu, 19 Mar 2020 07:45:49 -0700 (PDT)
Received: from dmz-smtp-gw4.gsd.esrl.noaa.gov (dmz-smtp-gw4.gsd.esrl.noaa.gov. [137.75.133.82])
        by smtp-relay.gmail.com with ESMTPS id b136sm332489qkc.9.2020.03.19.07.45.49
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Thu, 19 Mar 2020 07:45:49 -0700 (PDT)
X-Relaying-Domain: noaa.gov
Received: from smtp-gw1.gsd.esrl.noaa.gov (smtp-gw1.gsd.esrl.noaa.gov [137.75.240.140])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by dmz-smtp-gw4.gsd.esrl.noaa.gov (Postfix) with ESMTPS id BE526227CE8;
	Thu, 19 Mar 2020 14:45:48 +0000 (UTC)
Received: from linux-regtest2.gsd.esrl.noaa.gov (linux-regtest2.gsd.esrl.noaa.gov [137.75.232.74])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp-gw1.gsd.esrl.noaa.gov (Postfix) with ESMTPS id 6B2182269E5;
	Thu, 19 Mar 2020 14:45:48 +0000 (UTC)
Received: by linux-regtest2.gsd.esrl.noaa.gov (Postfix, from userid 1992296994)
	id F38ED4F9; Thu, 19 Mar 2020 14:45:47 +0000 (UTC)
Date: Thu, 19 Mar 2020 08:45:47 -0600
To: esmftest@cgd.ucar.edu, esmf_test@noaa.gov
Subject: ESMF_NUOPC_Mem_Leak_Linux-regtest2_gfortran
User-Agent: Heirloom mailx 12.5 7/5/10
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: quoted-printable
Message-Id: <20200319144547.F38ED4F9@linux-regtest2.gsd.esrl.noaa.gov>
From: silverio.vasquez@noaa.gov (Silverio Vasquez)
X-Gm-Spam: 0
X-Gm-Phishy: 0
X-getmail-retrieved-from-mailbox: INBOX





Script start time: Thu Mar 19 06:10:16 MDT 2020

Script end: Thu Mar 19 08:45:46 MDT 2020


______________________ESMF TRUNK NUOPC_MEMORY LEAK_TEST_SUMMARY________=
_________________________



                                           =20
                                                                       =
           Mem. Leak
               BUILD       INSTALL    OS.COMPILER.COMM.ABI         NUOP=
C Tests      Tests
_______________________________________________________________________=
__________________________
               PASS/FAIL   PASS/FAIL                                 PA=
SS/FAIL    PASS/FAIL=20
_______________________________________________________________________=
___________________________
linux-regtest2(g)PASS        PASS    Linux.gfortran.mpich3.64          =
35/6         6/35

_______________________________________________________________________=
_________________

Thu Mar 19 06:30:58 MDT 2020 on linux-regtest2.gsd.esrl.noaa.gov=20
Compiler and configuration information:

--------------------------------------------------------------=20
Currently Loaded Modulefiles:
 1) gfortran/4.8.5/gcc/4.8.5/mpich3/3.2.1 =20

ESMF Repository:
origin=09https://github.com/esmf-org/esmf (fetch)
origin=09https://github.com/esmf-org/esmf (push)
=20
ESMF_8_1_0_beta_snapshot_12-7-g08a6960
=20
=20
NUOPC Repository:
=20
Path: .
Working Copy Root Path: /export/scripts_dir/daily_builds/nuopc_mem_leak=
/gfortran/NUOPC-Protos
URL: svn://svn.code.sf.net/p/esmfcontrib/svn/NUOPC/trunk
Repository Root: svn://svn.code.sf.net/p/esmfcontrib/svn
Repository UUID: c3fc86fe-82d8-4841-a663-0ee342cebea3
Revision: 993
Node Kind: directory
Schedule: normal
Last Changed Author: theurich
Last Changed Rev: 992
Last Changed Date: 2020-02-10 13:22:44 -0700 (Mon, 10 Feb 2020)

=20
=20
--------------------------------------------------------------
ESMF_VERSION_STRING:    8.1.0 beta snapshot
ESMF_8_1_0_beta_snapshot_12-7-g08a6960
--------------------------------------------------------------
# On branch master
# Untracked files:
#   (use "git add <file>..." to include in what will be committed)
#
#=09tmp
#
# It took 4.00 seconds to enumerate untracked files. 'status -uno'
# may speed it up, but you have to be careful not to forget to add
# new files yourself (see 'git help status').
nothing added to commit but untracked files present (use "git add" to t=
rack)
--------------------------------------------------------------
=20
--------------------------------------------------------------
Make version:
GNU Make 3.82
Built for x86_64-redhat-linux-gnu
Copyright (C) 2010  Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl=
.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

--------------------------------------------------------------
Fortran Compiler version:
GNU Fortran (GCC) 4.8.5 20150623 (Red Hat 4.8.5-39)
Copyright (C) 2015 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING


--------------------------------------------------------------
C++ Compiler version:
g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-39)
Copyright (C) 2015 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is=
 NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURP=
OSE.


--------------------------------------------------------------
Preprocessor version:
gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-39)
Copyright (C) 2015 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is=
 NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURP=
OSE.

=20
--------------------------------------------------------------
 * User set ESMF environment variables *
ESMF_ABI=3D64
ESMF_BOPT=3Dg
ESMF_COMM=3Dmpich3
ESMF_COMPILER=3Dgfortran
ESMF_DIR=3D/export/scripts_dir/daily_builds/nuopc_mem_leak/gfortran/esm=
f
ESMF_INSTALL_BINDIR=3Dbin
ESMF_INSTALL_HEADERDIR=3Dinclude
ESMF_INSTALL_LIBDIR=3Dlib
ESMF_INSTALL_MODDIR=3Dinclude
ESMF_INSTALL_PREFIX=3D/export/scripts_dir/daily_builds/nuopc_mem_leak/g=
fortran/esmf/../install_dir
ESMF_OS=3DLinux
ESMF_SITE=3Ddefault
ESMF_TESTEXHAUSTIVE=3DON
ESMF_TESTMPMD=3DOFF
ESMF_TESTWITHTHREADS=3DOFF
ESMF_TOOLRUN=3Dvalgrind --leak-check=3Dfull --show-leak-kinds=3Dall=20
=20
--------------------------------------------------------------
 * ESMF environment variables *
ESMF_DIR: /export/scripts_dir/daily_builds/nuopc_mem_leak/gfortran/esmf
ESMF_OS:                Linux
ESMF_MACHINE:           x86_64
ESMF_ABI:               64
ESMF_COMPILER:          gfortran
ESMF_BOPT:              g
ESMF_COMM:              mpich3
ESMF_SITE:              default
ESMF_PTHREADS:          ON
ESMF_OPENMP:            ON
ESMF_OPENACC:           OFF
ESMF_CXXSTD:            11
ESMF_ARRAY_LITE:        FALSE
ESMF_NO_INTEGER_1_BYTE: TRUE
ESMF_NO_INTEGER_2_BYTE: TRUE
ESMF_FORTRANSYMBOLS:    default
ESMF_MAPPER_BUILD:      OFF
ESMF_AUTO_LIB_BUILD:    ON
ESMF_DEFER_LIB_BUILD:   ON
ESMF_SHARED_LIB_BUILD:  ON
ESMF_TRACE_LIB_BUILD:   ON
ESMF_TESTEXHAUSTIVE:    ON
ESMF_TESTCOMPTUNNEL:    ON
ESMF_TESTWITHTHREADS:   OFF
ESMF_TESTMPMD:          OFF
ESMF_TESTSHAREDOBJ:     OFF
ESMF_TESTFORCEOPENMP:   OFF
ESMF_TESTFORCEOPENACC:  OFF
ESMF_TESTHARNESS_ARRAY: default
ESMF_TESTHARNESS_FIELD: default
ESMF_MPIRUN:            mpirun=20
ESMF_TOOLRUN:           valgrind --leak-check=3Dfull --show-leak-kinds=
=3Dall=20
=20
--------------------------------------------------------------
 * ESMF environment variables pointing to 3rd party software *
ESMF_MOAB:               internal
ESMF_LAPACK:             internal
ESMF_ACC_SOFTWARE_STACK: none
ESMF_YAMLCPP:            internal
ESMF_PIO:                internal
=20
--------------------------------------------------------------
 * ESMF environment variables for final installation *
ESMF_INSTALL_PREFIX:    /export/scripts_dir/daily_builds/nuopc_mem_leak=
/gfortran/esmf/../install_dir
ESMF_INSTALL_HEADERDIR: include
ESMF_INSTALL_MODDIR:    include
ESMF_INSTALL_LIBDIR:    lib
ESMF_INSTALL_BINDIR:    bin
ESMF_INSTALL_DOCDIR:    doc
=20
--------------------------------------------------------------
 * ESMF Benchmark directory and parameters *
ESMF_BENCHMARK_PREFIX:         ./DEFAULTBENCHMARKDIR
ESMF_BENCHMARK_TOLERANCE:      20%
ESMF_BENCHMARK_THRESHOLD_MSEC: 500
=20
--------------------------------------------------------------
 * Other relevant environment variables *
PATH:    /export/esmf_env/build/mpich-3.2.1/mpich3_gfortran/bin:/usr/lo=
cal/share/Modules/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/home/sil=
verio.vasquez/.local/bin:/home/silverio.vasquez/bin:/home/silverio.vasq=
uez/.local/bin:/home/silverio.vasquez/bin:/home/silverio.vasquez/.local=
/bin:/home/silverio.vasquez/bin:/export/scripts_dir/daily_builds/nuopc_=
mem_leak/gfortran/esmf/../install_dir/bin:/home/silverio.vasquez/.local=
/bin:/home/silverio.vasquez/bin
LD_LIBRARY_PATH:=20
=20
--------------------------------------------------------------
 * Compilers, Linkers, Flags, and Libraries *
Location of the preprocessor:      /usr/bin/gcc
Location of the Fortran compiler:  /export/esmf_env/build/mpich-3.2.1/m=
pich3_gfortran/bin/mpif90
Location of the Fortran linker:    /export/esmf_env/build/mpich-3.2.1/m=
pich3_gfortran/bin/mpif90
Location of the C++ compiler:      /export/esmf_env/build/mpich-3.2.1/m=
pich3_gfortran/bin/mpicxx
Location of the C++ linker:        /export/esmf_env/build/mpich-3.2.1/m=
pich3_gfortran/bin/mpicxx

Fortran compiler flags:
ESMF_F90COMPILER: mpif90
ESMF_F90COMPILEOPTS: -g -Wall -Wextra -Wconversion -Wno-unused -Wno-unu=
sed-dummy-argument -fbacktrace -fimplicit-none -fcheck=3Darray-temps,bo=
unds,do,mem,recursion -fPIC  -m64 -mcmodel=3Dsmall -pthread -ffree-line=
-length-none  -fopenmp
ESMF_F90COMPILEPATHS: -I/export/scripts_dir/daily_builds/nuopc_mem_leak=
/gfortran/esmf/mod/modg/Linux.gfortran.64.mpich3.default -I/export/scri=
pts_dir/daily_builds/nuopc_mem_leak/gfortran/esmf/src/include=20
ESMF_F90COMPILECPPFLAGS: -DESMF_NO_INTEGER_1_BYTE -DESMF_NO_INTEGER_2_B=
YTE -DESMFVERSIONGIT=3D'ESMF_8_1_0_beta_snapshot_12-7-g08a6960' -DESMF_=
MOAB=3D1 -DESMF_LAPACK=3D1 -DESMF_LAPACK_INTERNAL=3D1 -DESMF_NO_ACC_SOF=
TWARE_STACK=3D1 -DESMF_YAMLCPP=3D1 -DESMF_YAML=3D1 -DESMF_PIO=3D1 -DESM=
F_MPIIO -DESMF_NO_OPENACC -DESMF_TESTEXHAUSTIVE -DESMF_BOPT_g -DESMF_TE=
STCOMPTUNNEL -DSx86_64_small=3D1 -DESMF_OS_Linux=3D1 -DESMF_COMM=3Dmpic=
h3 -DESMF_DIR=3D/export/scripts_dir/daily_builds/nuopc_mem_leak/gfortra=
n/esmf
ESMF_F90COMPILEFREECPP:=20
ESMF_F90COMPILEFREENOCPP: -ffree-form
ESMF_F90COMPILEFIXCPP: -cpp -ffixed-form
ESMF_F90COMPILEFIXNOCPP:=20

Fortran linker flags:
ESMF_F90LINKOPTS:    -m64 -mcmodel=3Dsmall -pthread -Wl,--no-as-needed =
 -fopenmp
ESMF_F90LINKPATHS: -L/export/scripts_dir/daily_builds/nuopc_mem_leak/gf=
ortran/esmf/lib/libg/Linux.gfortran.64.mpich3.default  -L/usr/lib/gcc/x=
86_64-redhat-linux/4.8.5/
ESMF_F90LINKRPATHS: -Wl,-rpath,/export/scripts_dir/daily_builds/nuopc_m=
em_leak/gfortran/esmf/lib/libg/Linux.gfortran.64.mpich3.default  -Wl,-r=
path,/usr/lib/gcc/x86_64-redhat-linux/4.8.5/
ESMF_F90LINKLIBS:  -lrt -lstdc++ -ldl
ESMF_F90ESMFLINKLIBS: -lesmf  -lrt -lstdc++ -ldl

C++ compiler flags:
ESMF_CXXCOMPILER: mpicxx
ESMF_CXXCOMPILEOPTS: -std=3Dc++11 -g -Wall -Wextra -Wno-unused  -fPIC -=
DESMF_LOWERCASE_SINGLEUNDERSCORE -m64 -mcmodel=3Dsmall -pthread  -fopen=
mp
ESMF_CXXCOMPILEPATHS:  -I/export/scripts_dir/daily_builds/nuopc_mem_lea=
k/gfortran/esmf/src/include   -I/export/scripts_dir/daily_builds/nuopc_=
mem_leak/gfortran/esmf/src/prologue/yaml-cpp/include
ESMF_CXXCOMPILECPPFLAGS: -DESMF_NO_INTEGER_1_BYTE -DESMF_NO_INTEGER_2_B=
YTE -DESMFVERSIONGIT=3D'ESMF_8_1_0_beta_snapshot_12-7-g08a6960' -DESMF_=
MOAB=3D1 -DESMF_LAPACK=3D1 -DESMF_LAPACK_INTERNAL=3D1 -DESMF_NO_ACC_SOF=
TWARE_STACK=3D1 -DESMF_YAMLCPP=3D1 -DESMF_YAML=3D1 -DESMF_PIO=3D1 -DESM=
F_MPIIO -DESMF_NO_OPENACC -DESMF_TESTEXHAUSTIVE -DESMF_BOPT_g -DESMF_TE=
STCOMPTUNNEL -DSx86_64_small=3D1 -DESMF_OS_Linux=3D1 -DESMF_COMM=3Dmpic=
h3 -DESMF_DIR=3D/export/scripts_dir/daily_builds/nuopc_mem_leak/gfortra=
n/esmf -D__SDIR__=3D'' -DESMF_CXXSTD=3D11

C++ linker flags:
ESMF_CXXLINKOPTS:   -m64 -mcmodel=3Dsmall -pthread -Wl,--no-as-needed  =
-fopenmp
ESMF_CXXLINKPATHS: -L/export/scripts_dir/daily_builds/nuopc_mem_leak/gf=
ortran/esmf/lib/libg/Linux.gfortran.64.mpich3.default  -L/usr/lib/gcc/x=
86_64-redhat-linux/4.8.5/
ESMF_CXXLINKRPATHS: -Wl,-rpath,/export/scripts_dir/daily_builds/nuopc_m=
em_leak/gfortran/esmf/lib/libg/Linux.gfortran.64.mpich3.default  -Wl,-r=
path,/usr/lib/gcc/x86_64-redhat-linux/4.8.5/
ESMF_CXXLINKLIBS:  -lmpifort -lrt -lgfortran -ldl
ESMF_CXXESMFLINKLIBS: -lesmf  -lmpifort -lrt -lgfortran -ldl

Shared library build:
ESMF_SL_LIBS_TO_MAKE: libesmf
ESMF_SL_SUFFIX:       so
ESMF_SL_LIBLINKER:    mpicxx
ESMF_SL_LIBOPTS:       -shared  -fopenmp
ESMF_SL_LIBLIBS:     =20

ESMF Tracing linker options:
ESMF_TRACE_LDPRELOAD=3D/export/scripts_dir/daily_builds/nuopc_mem_leak/=
gfortran/esmf/lib/libg/Linux.gfortran.64.mpich3.default/libesmftrace_pr=
eload.so
ESMF_TRACE_STATICLINKOPTS=3D-static -Wl,--wrap=3Dc_esmftrace_notify_wra=
ppers -Wl,--wrap=3Dc_esmftrace_isinitialized -Wl,--wrap=3Dwrite -Wl,--w=
rap=3Dwritev -Wl,--wrap=3Dpwrite -Wl,--wrap=3Dread -Wl,--wrap=3Dopen -W=
l,--wrap=3DMPI_Allgather -Wl,--wrap=3DMPI_Allgatherv -Wl,--wrap=3DMPI_A=
llreduce -Wl,--wrap=3DMPI_Alltoall -Wl,--wrap=3DMPI_Alltoallv -Wl,--wra=
p=3DMPI_Alltoallw -Wl,--wrap=3DMPI_Barrier -Wl,--wrap=3DMPI_Bcast -Wl,-=
-wrap=3DMPI_Gather -Wl,--wrap=3DMPI_Gatherv -Wl,--wrap=3DMPI_Recv -Wl,-=
-wrap=3DMPI_Reduce -Wl,--wrap=3DMPI_Scatter -Wl,--wrap=3DMPI_Send -Wl,-=
-wrap=3DMPI_Sendrecv -Wl,--wrap=3DMPI_Wait -Wl,--wrap=3DMPI_Waitall -Wl=
,--wrap=3DMPI_Waitany -Wl,--wrap=3DMPI_Waitsome -Wl,--wrap=3Dmpi_allgat=
her_ -Wl,--wrap=3Dmpi_allgather__ -Wl,--wrap=3Dmpi_allgatherv_ -Wl,--wr=
ap=3Dmpi_allgatherv__ -Wl,--wrap=3Dmpi_allreduce_ -Wl,--wrap=3Dmpi_allr=
educe__ -Wl,--wrap=3Dmpi_alltoall_ -Wl,--wrap=3Dmpi_alltoall__ -Wl,--wr=
ap=3Dmpi_alltoallv_ -Wl,--wrap=3Dmpi_alltoallv__ -Wl,--wrap=3Dmpi_allto=
allw_ -Wl,--wrap=3Dmpi_alltoallw__ -Wl,--wrap=3Dmpi_barrier_ -Wl,--wrap=
=3Dmpi_barrier__ -Wl,--wrap=3Dmpi_bcast_ -Wl,--wrap=3Dmpi_bcast__ -Wl,-=
-wrap=3Dmpi_exscan_ -Wl,--wrap=3Dmpi_exscan__ -Wl,--wrap=3Dmpi_gather_ =
-Wl,--wrap=3Dmpi_gather__ -Wl,--wrap=3Dmpi_gatherv_ -Wl,--wrap=3Dmpi_ga=
therv__ -Wl,--wrap=3Dmpi_recv_ -Wl,--wrap=3Dmpi_recv__ -Wl,--wrap=3Dmpi=
_reduce_ -Wl,--wrap=3Dmpi_reduce__ -Wl,--wrap=3Dmpi_reduce_scatter_ -Wl=
,--wrap=3Dmpi_reduce_scatter__ -Wl,--wrap=3Dmpi_scatter_ -Wl,--wrap=3Dm=
pi_scatter__ -Wl,--wrap=3Dmpi_scatterv_ -Wl,--wrap=3Dmpi_scatterv__ -Wl=
,--wrap=3Dmpi_scan_ -Wl,--wrap=3Dmpi_scan__ -Wl,--wrap=3Dmpi_send_ -Wl,=
--wrap=3Dmpi_send__ -Wl,--wrap=3Dmpi_wait_ -Wl,--wrap=3Dmpi_wait__ -Wl,=
--wrap=3Dmpi_waitall_ -Wl,--wrap=3Dmpi_waitall__ -Wl,--wrap=3Dmpi_waita=
ny_ -Wl,--wrap=3Dmpi_waitany__
ESMF_TRACE_STATICLINKLIBS=3D-lesmftrace_static


--------------------------------------------------------------
Compiling on Thu Mar 19 06:32:03 MDT 2020 on linux-regtest2.gsd.esrl.no=
aa.gov
Machine characteristics: Linux linux-regtest2.gsd.esrl.noaa.gov 3.10.0-=
1062.12.1.el7.x86_64 #1 SMP Thu Dec 12 06:44:49 EST 2019 x86_64 x86_64 =
x86_64 GNU/Linux
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
=20
Thu Mar 19 07:28:01 MDT 2020 library build -j4 ........................=
.PASS
Builds with warnings.
Thu Mar 19 07:29:08 MDT 2020 library install -j4 ......................=
.PASS
Thu Mar 19 07:29:11 MDT 2020 library installcheck -j4 .................=
.PASS


|---------------------------------- NUOPC TESTS -----------------------=
-----|

Thu Mar 19 07:29:21 MDT 2020 Build SingleModelProto ...................=
.PASS
Thu Mar 19 07:29:37 MDT 2020 Run SingleModelProto .....................=
.PASS
Thu Mar 19 07:29:37 MDT 2020 SingleModelProto Leak Test ***************=
*FAIL

Thu Mar 19 07:29:56 MDT 2020 Build AtmOcnLndProto .....................=
.PASS
Thu Mar 19 07:30:53 MDT 2020 Run AtmOcnLndProto .......................=
.PASS
Thu Mar 19 07:30:53 MDT 2020 AtmOcnLndProto Leak Test *****************=
*FAIL

Thu Mar 19 07:31:12 MDT 2020 Build AtmOcnMedPetListProto ..............=
.PASS
Thu Mar 19 07:33:06 MDT 2020 Run AtmOcnMedPetListProto ................=
.PASS
Thu Mar 19 07:33:06 MDT 2020 AtmOcnMedPetListProto Leak Test **********=
*FAIL

Thu Mar 19 07:33:17 MDT 2020 Build AtmOcnMedPetListTimescalesProto ....=
.PASS
Thu Mar 19 07:34:59 MDT 2020 Run AtmOcnMedPetListTimescalesProto ......=
.PASS
Thu Mar 19 07:34:59 MDT 2020 AtmOcnMedPetListTimescalesProto Leak Test =
*FAIL

Thu Mar 19 07:35:08 MDT 2020 Build AtmOcnMedPetListTimescalesSplitFastP=
roto.PASS
Thu Mar 19 07:36:32 MDT 2020 Run AtmOcnMedPetListTimescalesSplitFastPro=
to .PASS
Thu Mar 19 07:36:32 MDT 2020 AtmOcnMedPetListTimescalesSplitFastProto L=
eak Test *FAIL

Thu Mar 19 07:36:50 MDT 2020 Build AtmOcnProto ........................=
.PASS
Thu Mar 19 07:37:40 MDT 2020 Run AtmOcnProto ..........................=
.PASS
Thu Mar 19 07:37:40 MDT 2020 AtmOcnProto Leak Test ********************=
*FAIL

Thu Mar 19 07:37:48 MDT 2020 Build AtmOcnTransferGridProto ............=
.PASS
Thu Mar 19 07:38:02 MDT 2020 Run AtmOcnTransferGridProto **************=
*FAIL


The following is the 'tail' of the AtmOcnTransferGridProto run failure

=3D=3D3533=3D=3D Memcheck, a memory error detector
=3D=3D3533=3D=3D Copyright (C) 2002-2017, and GNU GPL'd, by Julian Sewa=
rd et al.
=3D=3D3533=3D=3D Using Valgrind-3.14.0 and LibVEX; rerun with -h for co=
pyright info
=3D=3D3533=3D=3D Command: ./esmApp
=3D=3D3533=3D=3D=20
=3D=3D3534=3D=3D Memcheck, a memory error detector
=3D=3D3534=3D=3D Copyright (C) 2002-2017, and GNU GPL'd, by Julian Sewa=
rd et al.
=3D=3D3534=3D=3D Using Valgrind-3.14.0 and LibVEX; rerun with -h for co=
pyright info
=3D=3D3534=3D=3D Command: ./esmApp
=3D=3D3534=3D=3D=20
=3D=3D3532=3D=3D Memcheck, a memory error detector
=3D=3D3532=3D=3D Copyright (C) 2002-2017, and GNU GPL'd, by Julian Sewa=
rd et al.
=3D=3D3532=3D=3D Using Valgrind-3.14.0 and LibVEX; rerun with -h for co=
pyright info
=3D=3D3532=3D=3D Command: ./esmApp
=3D=3D3532=3D=3D=20
=3D=3D3535=3D=3D Memcheck, a memory error detector
=3D=3D3535=3D=3D Copyright (C) 2002-2017, and GNU GPL'd, by Julian Sewa=
rd et al.
=3D=3D3535=3D=3D Using Valgrind-3.14.0 and LibVEX; rerun with -h for co=
pyright info
=3D=3D3535=3D=3D Command: ./esmApp
=3D=3D3535=3D=3D=20
application called MPI_Abort(comm=3D0x84000002, 1) - process 2
Thu Mar 19 07:38:02 MDT 2020 >> AtmOcnTransferGridProto Leak Test .....=
.PASS

Thu Mar 19 07:38:10 MDT 2020 Build AtmOcnTransferLocStreamProto .......=
.PASS
Thu Mar 19 07:38:26 MDT 2020 Run AtmOcnTransferLocStreamProto .........=
.PASS
Thu Mar 19 07:38:26 MDT 2020 AtmOcnTransferLocStreamProto Leak Test ***=
*FAIL

Thu Mar 19 07:38:33 MDT 2020 Build NamespaceProto .....................=
.PASS
Thu Mar 19 07:39:15 MDT 2020 Run NamespaceProto .......................=
.PASS
Thu Mar 19 07:39:15 MDT 2020 NamespaceProto Leak Test *****************=
*FAIL

Thu Mar 19 07:39:23 MDT 2020 Build AtmOcnCplListProto .................=
.PASS
Thu Mar 19 07:40:06 MDT 2020 Run AtmOcnCplListProto *******************=
*FAIL


The following is the 'tail' of the AtmOcnCplListProto run failure

=3D=3D21661=3D=3D    by 0x5AC2072: ESMCI::XXE::exec(int, char**, int*, =
int, bool*, bool*, double*, int, int, int*, ESMCI::XXE::SuperVectP*) (E=
SMCI_DELayout.C:5012)
=3D=3D21661=3D=3D    by 0x595FD50: int ESMCI::sparseMatMulStoreEncodeXX=
E<ESMCI::SeqIndex<int>, ESMCI::SeqIndex<int> >(ESMCI::VM*, ESMCI::DELay=
out*, ESMCI::DELayout*, bool, int, int, ESMC_TypeKind_Flag, ESMC_TypeKi=
nd_Flag, ESMC_TypeKind_Flag, std::vector<ESMCI::ArrayHelper::SendnbElem=
ent<ESMCI::SeqIndex<int>, ESMCI::SeqIndex<int> >, std::allocator<ESMCI:=
:ArrayHelper::SendnbElement<ESMCI::SeqIndex<int>, ESMCI::SeqIndex<int> =
> > >&, std::vector<ESMCI::ArrayHelper::RecvnbElement<ESMCI::SeqIndex<i=
nt>, ESMCI::SeqIndex<int> >, std::allocator<ESMCI::ArrayHelper::RecvnbE=
lement<ESMCI::SeqIndex<int>, ESMCI::SeqIndex<int> > > >&, int const*, c=
har**, int, ESMCI::RouteHandle**, bool, int*, int*) (ESMCI_Array.C:1105=
1)
=3D=3D21661=3D=3D    by 0x5952F86: int ESMCI::Array::tSparseMatMulStore=
<int, int>(ESMCI::Array*, ESMCI::Array*, ESMCI::RouteHandle**, std::vec=
tor<ESMCI::SparseMatrix<int, int>, std::allocator<ESMCI::SparseMatrix<i=
nt, int> > > const&, bool, bool, int*, int*) (ESMCI_Array.C:9260)
=3D=3D21661=3D=3D    by 0x59502A8: int ESMCI::Array::sparseMatMulStore<=
int, int>(ESMCI::Array*, ESMCI::Array*, ESMCI::RouteHandle**, std::vect=
or<ESMCI::SparseMatrix<int, int>, std::allocator<ESMCI::SparseMatrix<in=
t, int> > > const&, bool, bool, int*, int*) (ESMCI_Array.C:8561)
=3D=3D21661=3D=3D    by 0x592BB5B: c_esmc_arraysmmstoreind4_ (ESMCI_Arr=
ay_F.C:1071)
=3D=3D21661=3D=3D    by 0x5E4A172: ESMCI_regrid_create(ESMCI::Mesh**, E=
SMCI::Array**, ESMCI::PointList**, ESMCI::Mesh**, ESMCI::Array**, ESMCI=
::PointList**, int*, int*, int*, int*, int*, int*, int*, int*, double*,=
 int*, int*, int*, int*, int*, int*, ESMCI::RouteHandle**, int*, int*, =
int*, ESMCI::TempWeights**, int*, int*, ESMCI::TempUDL**, int*, ESMCI::=
Array**, int*) (ESMCI_Mesh_Regrid_Glue.C:466)
=3D=3D21661=3D=3D    by 0x5DC152B: ESMCI::MeshCap::regrid_create(ESMCI:=
:MeshCap**, ESMCI::Array**, ESMCI::PointList**, ESMCI::MeshCap**, ESMCI=
::Array**, ESMCI::PointList**, int*, int*, int*, int*, int*, int*, int*=
, int*, double*, int*, int*, int*, int*, int*, int*, ESMCI::RouteHandle=
**, int*, int*, int*, ESMCI::TempWeights**, int*, int*, ESMCI::TempUDL*=
*, int*, ESMCI::Array**, int*) (ESMCI_MeshCap.C:594)
=3D=3D21661=3D=3D=20
=3D=3D21663=3D=3D    at 0x5AD03D3: void ESMCI::XXE::exec_zeroSuperScala=
rRRA<double>(ESMCI::XXE::ZeroSuperScalarRRAInfo*, int, char**) (ESMCI_D=
ELayout.C:5601)
=3D=3D21663=3D=3D    by 0x5AC26F9: ESMCI::XXE::exec(int, char**, int*, =
int, bool*, bool*, double*, int, int, int*, ESMCI::XXE::SuperVectP*) (E=
SMCI_DELayout.C:5203)
=3D=3D21663=3D=3D    by 0x595FD50: int ESMCI::sparseMatMulStoreEncodeXX=
E<ESMCI::SeqIndex<int>, ESMCI::SeqIndex<int> >(ESMCI::VM*, ESMCI::DELay=
out*, ESMCI::DELayout*, bool, int, int, ESMC_TypeKind_Flag, ESMC_TypeKi=
nd_Flag, ESMC_TypeKind_Flag, std::vector<ESMCI::ArrayHelper::SendnbElem=
ent<ESMCI::SeqIndex<int>, ESMCI::SeqIndex<int> >, std::allocator<ESMCI:=
:ArrayHelper::SendnbElement<ESMCI::SeqIndex<int>, ESMCI::SeqIndex<int> =
> > >&, std::vector<ESMCI::ArrayHelper::RecvnbElement<ESMCI::SeqIndex<i=
nt>, ESMCI::SeqIndex<int> >, std::allocator<ESMCI::ArrayHelper::RecvnbE=
lement<ESMCI::SeqIndex<int>, ESMCI::SeqIndex<int> > > >&, int const*, c=
har**, int, ESMCI::RouteHandle**, bool, int*, int*) (ESMCI_Array.C:1105=
1)
=3D=3D21663=3D=3D    by 0x5952F86: int ESMCI::Array::tSparseMatMulStore=
<int, int>(ESMCI::Array*, ESMCI::Array*, ESMCI::RouteHandle**, std::vec=
tor<ESMCI::SparseMatrix<int, int>, std::allocator<ESMCI::SparseMatrix<i=
nt, int> > > const&, bool, bool, int*, int*) (ESMCI_Array.C:9260)
=3D=3D21663=3D=3D    by 0x59502A8: int ESMCI::Array::sparseMatMulStore<=
int, int>(ESMCI::Array*, ESMCI::Array*, ESMCI::RouteHandle**, std::vect=
or<ESMCI::SparseMatrix<int, int>, std::allocator<ESMCI::SparseMatrix<in=
t, int> > > const&, bool, bool, int*, int*) (ESMCI_Array.C:8561)
=3D=3D21663=3D=3D    by 0x592BB5B: c_esmc_arraysmmstoreind4_ (ESMCI_Arr=
ay_F.C:1071)
=3D=3D21663=3D=3D    by 0x5E4A172: ESMCI_regrid_create(ESMCI::Mesh**, E=
SMCI::Array**, ESMCI::PointList**, ESMCI::Mesh**, ESMCI::Array**, ESMCI=
::PointList**, int*, int*, int*, int*, int*, int*, int*, int*, double*,=
 int*, int*, int*, int*, int*, int*, ESMCI::RouteHandle**, int*, int*, =
int*, ESMCI::TempWeights**, int*, int*, ESMCI::TempUDL**, int*, ESMCI::=
Array**, int*) (ESMCI_Mesh_Regrid_Glue.C:466)
=3D=3D21663=3D=3D    by 0x5DC152B: ESMCI::MeshCap::regrid_create(ESMCI:=
:MeshCap**, ESMCI::Array**, ESMCI::PointList**, ESMCI::MeshCap**, ESMCI=
::Array**, ESMCI::PointList**, int*, int*, int*, int*, int*, int*, int*=
, int*, double*, int*, int*, int*, int*, int*, int*, ESMCI::RouteHandle=
**, int*, int*, int*, ESMCI::TempWeights**, int*, int*, ESMCI::TempUDL*=
*, int*, ESMCI::Array**, int*) (ESMCI_MeshCap.C:594)
=3D=3D21663=3D=3D    by 0x5EAF51E: c_esmc_regrid_create_ (ESMCI_Regrid_=
F.C:109)
=3D=3D21663=3D=3D    by 0x6B461CB: __esmf_regridmod_MOD_esmf_regridstor=
e (ESMF_Regrid.F90:363)
=3D=3D21663=3D=3D    by 0x67E0622: __esmf_fieldregridmod_MOD_esmf_field=
regridstorenx (ESMF_FieldRegrid.F90:1422)
=3D=3D21663=3D=3D    by 0x6E4D2DF: __nuopc_connector_MOD_fieldbundlecpl=
store (NUOPC_Connector.F90:6856)
=3D=3D21663=3D=3D=20
=3D=3D21663=3D=3D Use of uninitialised value of size 8
=3D=3D21663=3D=3D    at 0x5B5E869: void ESMCI::XXE::exec_sssDstRra<doub=
le, double>(double*, int*, double*, int*, int, int) (ESMCI_DELayout.C:6=
074)
=3D=3D21663=3D=3D    by 0x5B01168: void ESMCI::XXE::sssDstRra<double, d=
ouble>(double*, ESMCI::XXE::TKId, int*, double*, int*, ESMCI::XXE::TKId=
, int, int, int, int, int, int, int, int*, int*, bool) (ESMCI_DELayout.=
C:6044)
=3D=3D21663=3D=3D    by 0x5AD71E3: void ESMCI::XXE::sssDstRra<double, i=
nt>(double*, ESMCI::XXE::TKId, int*, int*, int*, ESMCI::XXE::TKId, int,=
 int, int, int, int, int, int, int*, int*, bool) (ESMCI_DELayout.C:6001=
)
=3D=3D21663=3D=3D    by 0x5ACCF34: void ESMCI::XXE::sssDstRra<int, int>=
(int*, ESMCI::XXE::TKId, int*, int*, int*, ESMCI::XXE::TKId, int, int, =
int, int, int, int, int, int*, int*, bool) (ESMCI_DELayout.C:5961)
=3D=3D21663=3D=3D    by 0x5AC14B3: ESMCI::XXE::exec(int, char**, int*, =
int, bool*, bool*, double*, int, int, int*, ESMCI::XXE::SuperVectP*) (E=
SMCI_DELayout.C:4670)
=3D=3D21663=3D=3D    by 0x5AC0C87: ESMCI::XXE::exec(int, char**, int*, =
int, bool*, bool*, double*, int, int, int*, ESMCI::XXE::SuperVectP*) (E=
SMCI_DELayout.C:4402)
=3D=3D21663=3D=3D    by 0x595FD50: int ESMCI::sparseMatMulStoreEncodeXX=
E<ESMCI::SeqIndex<int>, ESMCI::SeqIndex<int> >(ESMCI::VM*, ESMCI::DELay=
out*, ESMCI::DELayout*, bool, int, int, ESMC_TypeKind_Flag, ESMC_TypeKi=
nd_Flag, ESMC_TypeKind_Flag, std::vector<ESMCI::ArrayHelper::SendnbElem=
ent<ESMCI::SeqIndex<int>, ESMCI::SeqIndex<int> >, std::allocator<ESMCI:=
:ArrayHelper::SendnbElement<ESMCI::SeqIndex<int>, ESMCI::SeqIndex<int> =
> > >&, std::vector<ESMCI::ArrayHelper::RecvnbElement<ESMCI::SeqIndex<i=
nt>, ESMCI::SeqIndex<int> >, std::allocator<ESMCI::ArrayHelper::RecvnbE=
lement<ESMCI::SeqIndex<int>, ESMCI::SeqIndex<int> > > >&, int const*, c=
har**, int, ESMCI::RouteHandle**, bool, int*, int*) (ESMCI_Array.C:1105=
1)
=3D=3D21663=3D=3D    by 0x5952F86: int ESMCI::Array::tSparseMatMulStore=
<int, int>(ESMCI::Array*, ESMCI::Array*, ESMCI::RouteHandle**, std::vec=
tor<ESMCI::SparseMatrix<int, int>, std::allocator<ESMCI::SparseMatrix<i=
nt, int> > > const&, bool, bool, int*, int*) (ESMCI_Array.C:9260)
=3D=3D21663=3D=3D    by 0x59502A8: int ESMCI::Array::sparseMatMulStore<=
int, int>(ESMCI::Array*, ESMCI::Array*, ESMCI::RouteHandle**, std::vect=
or<ESMCI::SparseMatrix<int, int>, std::allocator<ESMCI::SparseMatrix<in=
t, int> > > const&, bool, bool, int*, int*) (ESMCI_Array.C:8561)
=3D=3D21663=3D=3D    by 0x592BB5B: c_esmc_arraysmmstoreind4_ (ESMCI_Arr=
ay_F.C:1071)
=3D=3D21663=3D=3D    by 0x5E4A172: ESMCI_regrid_create(ESMCI::Mesh**, E=
SMCI::Array**, ESMCI::PointList**, ESMCI::Mesh**, ESMCI::Array**, ESMCI=
::PointList**, int*, int*, int*, int*, int*, int*, int*, int*, double*,=
 int*, int*, int*, int*, int*, int*, ESMCI::RouteHandle**, int*, int*, =
int*, ESMCI::TempWeights**, int*, int*, ESMCI::TempUDL**, int*, ESMCI::=
Array**, int*) (ESMCI_Mesh_Regrid_Glue.C:466)
=3D=3D21663=3D=3D    by 0x5DC152B: ESMCI::MeshCap::regrid_create(ESMCI:=
:MeshCap**, ESMCI::Array**, ESMCI::PointList**, ESMCI::MeshCap**, ESMCI=
::Array**, ESMCI::PointList**, int*, int*, int*, int*, int*, int*, int*=
, int*, double*, int*, int*, int*, int*, int*, int*, ESMCI::RouteHandle=
**, int*, int*, int*, ESMCI::TempWeights**, int*, int*, ESMCI::TempUDL*=
*, int*, ESMCI::Array**, int*) (ESMCI_MeshCap.C:594)
=3D=3D21663=3D=3D=20
=3D=3D21663=3D=3D Use of uninitialised value of size 8
=3D=3D21663=3D=3D    at 0x5B5E87D: void ESMCI::XXE::exec_sssDstRra<doub=
le, double>(double*, int*, double*, int*, int, int) (ESMCI_DELayout.C:6=
074)
=3D=3D21663=3D=3D    by 0x5B01168: void ESMCI::XXE::sssDstRra<double, d=
ouble>(double*, ESMCI::XXE::TKId, int*, double*, int*, ESMCI::XXE::TKId=
, int, int, int, int, int, int, int, int*, int*, bool) (ESMCI_DELayout.=
C:6044)
=3D=3D21663=3D=3D    by 0x5AD71E3: void ESMCI::XXE::sssDstRra<double, i=
nt>(double*, ESMCI::XXE::TKId, int*, int*, int*, ESMCI::XXE::TKId, int,=
 int, int, int, int, int, int, int*, int*, bool) (ESMCI_DELayout.C:6001=
)
=3D=3D21663=3D=3D    by 0x5ACCF34: void ESMCI::XXE::sssDstRra<int, int>=
(int*, ESMCI::XXE::TKId, int*, int*, int*, ESMCI::XXE::TKId, int, int, =
int, int, int, int, int, int*, int*, bool) (ESMCI_DELayout.C:5961)
=3D=3D21663=3D=3D    by 0x5AC14B3: ESMCI::XXE::exec(int, char**, int*, =
int, bool*, bool*, double*, int, int, int*, ESMCI::XXE::SuperVectP*) (E=
SMCI_DELayout.C:4670)
=3D=3D21663=3D=3D    by 0x5AC0C87: ESMCI::XXE::exec(int, char**, int*, =
int, bool*, bool*, double*, int, int, int*, ESMCI::XXE::SuperVectP*) (E=
SMCI_DELayout.C:4402)
=3D=3D21663=3D=3D    by 0x595FD50: int ESMCI::sparseMatMulStoreEncodeXX=
E<ESMCI::SeqIndex<int>, ESMCI::SeqIndex<int> >(ESMCI::VM*, ESMCI::DELay=
out*, ESMCI::DELayout*, bool, int, int, ESMC_TypeKind_Flag, ESMC_TypeKi=
nd_Flag, ESMC_TypeKind_Flag, std::vector<ESMCI::ArrayHelper::SendnbElem=
ent<ESMCI::SeqIndex<int>, ESMCI::SeqIndex<int> >, std::allocator<ESMCI:=
:ArrayHelper::SendnbElement<ESMCI::SeqIndex<int>, ESMCI::SeqIndex<int> =
> > >&, std::vector<ESMCI::ArrayHelper::RecvnbElement<ESMCI::SeqIndex<i=
nt>, ESMCI::SeqIndex<int> >, std::allocator<ESMCI::ArrayHelper::RecvnbE=
lement<ESMCI::SeqIndex<int>, ESMCI::SeqIndex<int> > > >&, int const*, c=
har**, int, ESMCI::RouteHandle**, bool, int*, int*) (ESMCI_Array.C:1105=
1)
=3D=3D21663=3D=3D    by 0x5952F86: int ESMCI::Array::tSparseMatMulStore=
<int, int>(ESMCI::Array*, ESMCI::Array*, ESMCI::RouteHandle**, std::vec=
tor<ESMCI::SparseMatrix<int, int>, std::allocator<ESMCI::SparseMatrix<i=
nt, int> > > const&, bool, bool, int*, int*) (ESMCI_Array.C:9260)
=3D=3D21663=3D=3D    by 0x59502A8: int ESMCI::Array::sparseMatMulStore<=
int, int>(ESMCI::Array*, ESMCI::Array*, ESMCI::RouteHandle**, std::vect=
or<ESMCI::SparseMatrix<int, int>, std::allocator<ESMCI::SparseMatrix<in=
t, int> > > const&, bool, bool, int*, int*) (ESMCI_Array.C:8561)
=3D=3D21663=3D=3D    by 0x592BB5B: c_esmc_arraysmmstoreind4_ (ESMCI_Arr=
ay_F.C:1071)
=3D=3D21663=3D=3D    by 0x5E4A172: ESMCI_regrid_create(ESMCI::Mesh**, E=
SMCI::Array**, ESMCI::PointList**, ESMCI::Mesh**, ESMCI::Array**, ESMCI=
::PointList**, int*, int*, int*, int*, int*, int*, int*, int*, double*,=
 int*, int*, int*, int*, int*, int*, ESMCI::RouteHandle**, int*, int*, =
int*, ESMCI::TempWeights**, int*, int*, ESMCI::TempUDL**, int*, ESMCI::=
Array**, int*) (ESMCI_Mesh_Regrid_Glue.C:466)
=3D=3D21663=3D=3D    by 0x5DC152B: ESMCI::MeshCap::regrid_create(ESMCI:=
:MeshCap**, ESMCI::Array**, ESMCI::PointList**, ESMCI::MeshCap**, ESMCI=
::Array**, ESMCI::PointList**, int*, int*, int*, int*, int*, int*, int*=
, int*, double*, int*, int*, int*, int*, int*, int*, ESMCI::RouteHandle=
**, int*, int*, int*, ESMCI::TempWeights**, int*, int*, ESMCI::TempUDL*=
*, int*, ESMCI::Array**, int*) (ESMCI_MeshCap.C:594)
=3D=3D21663=3D=3D=20
application called MPI_Abort(comm=3D0x84000002, 1) - process 3
Thu Mar 19 07:40:06 MDT 2020 AtmOcnCplListProto Leak Test .............=
.PASS

Thu Mar 19 07:40:16 MDT 2020 Build DriverInDriverProto ................=
.PASS
Thu Mar 19 07:41:10 MDT 2020 Run DriverInDriverProto ..................=
.PASS
Thu Mar 19 07:41:10 MDT 2020 DriverInDriverProto Leak Test ************=
*FAIL

Thu Mar 19 07:41:20 MDT 2020 Build AtmOcnRtmTwoTimescalesProto ........=
.PASS
Thu Mar 19 07:42:09 MDT 2020 Run AtmOcnRtmTwoTimescalesProto ..........=
.PASS
Thu Mar 19 07:42:09 MDT 2020 AtmOcnRtmTwoTimescalesProto Leak Test ****=
*FAIL

Thu Mar 19 07:42:17 MDT 2020 Build AsyncIOBlockingProto ...............=
.PASS
Thu Mar 19 07:45:24 MDT 2020 Run AsyncIOBlockingProto .................=
.PASS
Thu Mar 19 07:45:24 MDT 2020 AsyncIOBlockingProto Leak Test ***********=
*FAIL

Thu Mar 19 07:45:33 MDT 2020 Build AsyncIONonblockingProto ............=
.PASS
Thu Mar 19 07:53:04 MDT 2020 Run AsyncIONonblockingProto ..............=
.PASS
Thu Mar 19 07:53:04 MDT 2020 AsyncIONonblockingProto Leak Test ********=
*FAIL

Thu Mar 19 07:53:13 MDT 2020 Build AtmOcnConProto .....................=
.PASS
Thu Mar 19 07:53:43 MDT 2020 Run AtmOcnConProto .......................=
.PASS
Thu Mar 19 07:53:43 MDT 2020 AtmOcnConProto Leak Test *****************=
*FAIL

Thu Mar 19 07:53:50 MDT 2020 Build AtmOcnFDSynoProto ..................=
.PASS
Thu Mar 19 07:54:15 MDT 2020 Run AtmOcnFDSynoProto ....................=
.PASS
Thu Mar 19 07:54:15 MDT 2020 AtmOcnFDSynoProto Leak Test **************=
*FAIL

Thu Mar 19 07:54:22 MDT 2020 Build AtmOcnImplicitProto ................=
.PASS
Thu Mar 19 07:55:01 MDT 2020 Run AtmOcnImplicitProto ..................=
.PASS
Thu Mar 19 07:55:01 MDT 2020 AtmOcnImplicitProto Leak Test ************=
*FAIL

Thu Mar 19 07:55:10 MDT 2020 Build AtmOcnMedProto .....................=
.PASS
Thu Mar 19 07:56:15 MDT 2020 Run AtmOcnMedProto .......................=
.PASS
Thu Mar 19 07:56:15 MDT 2020 AtmOcnMedProto Leak Test *****************=
*FAIL

Thu Mar 19 07:56:23 MDT 2020 Build AtmOcnPetListProto .................=
.PASS
Thu Mar 19 07:57:03 MDT 2020 Run AtmOcnPetListProto ...................=
.PASS
Thu Mar 19 07:57:03 MDT 2020 AtmOcnPetListProto Leak Test *************=
*FAIL

|-------------------------------- ATM=3DA OCN=3DA,B,C -----------------=
---------|

Thu Mar 19 07:57:35 MDT 2020 Build AtmOcnSelectExternalProto ..........=
.PASS
Thu Mar 19 07:58:01 MDT 2020 Run AtmOcnSelectExternalProto ............=
.PASS
Thu Mar 19 07:58:01 MDT 2020 AtmOcnSelectExternalProto Leak Test ******=
*FAIL

|-------------------------------- ATM=3DB OCN=3DA,B,C -----------------=
---------|

Thu Mar 19 07:58:33 MDT 2020 Build AtmOcnSelectExternalProto ..........=
.PASS
Thu Mar 19 07:58:59 MDT 2020 Run AtmOcnSelectExternalProto ............=
.PASS
Thu Mar 19 07:58:59 MDT 2020 AtmOcnSelectExternalProto Leak Test ******=
*FAIL

|-------------------------------- ATM=3DC OCN=3DA,B,C -----------------=
---------|

Thu Mar 19 07:59:28 MDT 2020 Build AtmOcnSelectExternalProto ..........=
.PASS
Thu Mar 19 07:59:53 MDT 2020 Run AtmOcnSelectExternalProto ............=
.PASS
Thu Mar 19 07:59:53 MDT 2020 AtmOcnSelectExternalProto Leak Test ******=
*FAIL

|-------------------------------- ATM=3DD OCN=3DA,B,C -----------------=
---------|

Thu Mar 19 08:00:23 MDT 2020 Build AtmOcnSelectExternalProto ..........=
.PASS
Thu Mar 19 08:00:51 MDT 2020 Run AtmOcnSelectExternalProto ............=
.PASS
Thu Mar 19 08:00:51 MDT 2020 AtmOcnSelectExternalProto Leak Test ******=
*FAIL

|-------------------------------- ATM=3DE OCN=3DA,B,C -----------------=
---------|

Thu Mar 19 08:01:20 MDT 2020 Build AtmOcnSelectExternalProto ..........=
.PASS
Thu Mar 19 08:02:18 MDT 2020 Run AtmOcnSelectExternalProto ............=
.PASS
Thu Mar 19 08:02:18 MDT 2020 AtmOcnSelectExternalProto Leak Test ******=
*FAIL

|-------------------------------- ATM=3DA OCN=3DA,B -------------------=
---------|

Thu Mar 19 08:02:29 MDT 2020 Build AtmOcnSelectProto ..................=
.PASS
Thu Mar 19 08:02:55 MDT 2020 Run AtmOcnSelectProto ....................=
.PASS
Thu Mar 19 08:02:55 MDT 2020 AtmOcnSelectProto Leak Test **************=
*FAIL

|-------------------------------- ATM=3DB OCN=3DA,B -------------------=
---------|

Thu Mar 19 08:03:06 MDT 2020 Build AtmOcnSelectProto ..................=
.PASS
Thu Mar 19 08:03:33 MDT 2020 Run AtmOcnSelectProto ....................=
.PASS
Thu Mar 19 08:03:33 MDT 2020 AtmOcnSelectProto Leak Test **************=
*FAIL

|-------------------------------- ATM=3DA OCN=3DB ---------------------=
---------|

Thu Mar 19 08:03:44 MDT 2020 Build AtmOcnSelectProto ..................=
.PASS
Thu Mar 19 08:04:08 MDT 2020 Run AtmOcnSelectProto ....................=
.PASS
Thu Mar 19 08:04:08 MDT 2020 AtmOcnSelectProto Leak Test **************=
*FAIL

Thu Mar 19 08:04:17 MDT 2020 Build AtmOcnSimpleImplicitProto ..........=
.PASS
Thu Mar 19 08:04:49 MDT 2020 Run AtmOcnSimpleImplicitProto ............=
.PASS
Thu Mar 19 08:04:49 MDT 2020 AtmOcnSimpleImplicitProto Leak Test ******=
*FAIL

Thu Mar 19 08:05:01 MDT 2020 Build GenericMediatorProto ...............=
.PASS
Thu Mar 19 08:07:39 MDT 2020 Run GenericMediatorProto .................=
.PASS
Thu Mar 19 08:07:39 MDT 2020 GenericMediatorProto Leak Test ***********=
*FAIL

Thu Mar 19 08:07:50 MDT 2020 Build NestingMultipleProto ...............=
.PASS
Thu Mar 19 08:11:14 MDT 2020 Run NestingMultipleProto .................=
.PASS
Thu Mar 19 08:11:14 MDT 2020 NestingMultipleProto Leak Test ***********=
*FAIL

Thu Mar 19 08:11:25 MDT 2020 Build NestingSingleProto .................=
.PASS
Thu Mar 19 08:14:14 MDT 2020 Run NestingSingleProto ...................=
.PASS
Thu Mar 19 08:14:15 MDT 2020 NestingSingleProto Leak Test *************=
*FAIL

Thu Mar 19 08:14:31 MDT 2020 Build NestingTelescopeMultipleProto ......=
.PASS
Thu Mar 19 08:24:03 MDT 2020 Run NestingTelescopeMultipleProto ........=
.PASS
Thu Mar 19 08:24:03 MDT 2020 NestingTelescopeMultipleProto Leak Test **=
*FAIL

Thu Mar 19 08:24:17 MDT 2020 Build AtmOcnMedIngestFromConfigProto .. ..=
.PASS
Thu Mar 19 08:26:02 MDT 2020 Run AtmOcnMedIngestFromConfigProto .. ....=
.PASS
Thu Mar 19 08:26:02 MDT 2020 AtmOcnMedIngestFromConfigProto Leak Test *=
***FAIL

Thu Mar 19 08:26:17 MDT 2020 Build DriverInDriverProtoIPDv02 ..........=
.PASS
Thu Mar 19 08:30:25 MDT 2020 Run DriverInDriverProtoIPDv02 ............=
.PASS
Thu Mar 19 08:30:25 MDT 2020 DriverInDriverProtoIPDv02 Leak Test ******=
*FAIL

Thu Mar 19 08:30:44 MDT 2020 Build AtmOcnScalarProto ..................=
.PASS
Thu Mar 19 08:31:46 MDT 2020 Run AtmOcnScalarProto ....................=
.PASS
Thu Mar 19 08:31:46 MDT 2020 AtmOcnScalarProto Leak Test **************=
*FAIL

Thu Mar 19 08:32:05 MDT 2020 Build HierarchyProto .....................=
.PASS
Thu Mar 19 08:42:09 MDT 2020 Run HierarchyProto .......................=
.PASS
Thu Mar 19 08:42:09 MDT 2020 HierarchyProto Leak Test *****************=
*FAIL

Thu Mar 19 08:42:27 MDT 2020 Build AtmOcnMedIngestFromInternalProto ...=
.PASS
Thu Mar 19 08:44:34 MDT 2020 Run AtmOcnMedIngestFromInternalProto .....=
.PASS
Thu Mar 19 08:44:35 MDT 2020 AtmOcnMedIngestFromInternalProto Leak Test=
*FAIL

Thu Mar 19 08:44:50 MDT 2020 Build AtmOcnLogNoneProto .................=
.PASS
Thu Mar 19 08:44:50 MDT 2020 Run AtmOcnLogNoneProto *******************=
*FAIL


The following is the output of cat PET*.ESMF_LogFile

Thu Mar 19 08:44:51 MDT 2020 AtmOcnLogNoneProto Leak Test .............=
.PASS

Thu Mar 19 08:45:11 MDT 2020 Build AtmOcnIceSimpleImplicitProto .......=
.PASS
Thu Mar 19 08:45:11 MDT 2020 Run AtmOcnIceSimpleImplicitProto *********=
*FAIL


The following is the output of cat PET*.ESMF_LogFile

Thu Mar 19 08:45:11 MDT 2020 AtmOcnIceSimpleImplicitProto Leak Test ...=
.PASS

Thu Mar 19 08:45:29 MDT 2020 Build DynPhyProto ........................=
.PASS
Thu Mar 19 08:45:30 MDT 2020 Run DynPhyProto **************************=
*FAIL


The following is the output of cat PET*.ESMF_LogFile

Thu Mar 19 08:45:30 MDT 2020 DynPhyProto Leak Test ....................=
.PASS

Thu Mar 19 08:45:40 MDT 2020 Build AtmOcnCplSetProto ..................=
.PASS
Thu Mar 19 08:45:40 MDT 2020 Run AtmOcnCplSetProto ********************=
*FAIL


The following is the output of cat PET*.ESMF_LogFile

Thu Mar 19 08:45:40 MDT 2020 AtmOcnCplSetProto Leak Test ..............=
.PASS




 The tarballs of the examples directories can be found at:
 /export/scripts_dir/daily_builds/nuopc_mem_leak/gfortran/esmf_logs/200=
3_test.
 These tarballs contain the *Log and *stdout files only, not the execut=
ables.
 This directory also contains failed build output files with the naming=
 convention of=20
 build_ESMF_BOPT_(day)(platform)ESMF_OS ESMF_ABI ESMF_COMPILER ESMF_COM=
M.
 For example, if the build fails on longs on the 19th of the month with=
 ESMF_BOPT=3Dg, the file=20
 would be called 'build_g_19longslinux32pgimpiuni'.
Test_results:yellow
Day_of_Week:Thursday
Test_Failures:41
