! $Id$
!
! Earth System Modeling Framework
! Copyright 2002-2020, University Corporation for Atmospheric Research,
! Massachusetts Institute of Technology, Geophysical Fluid Dynamics
! Laboratory, University of Michigan, National Centers for Environmental
! Prediction, Los Alamos National Laboratory, Argonne National Laboratory,
! NASA Goddard Space Flight Center.
! Licensed under the University of Illinois-NCSA License.
!
!==============================================================================
!
program ESMF_AttributeAutoLinkUTest

!------------------------------------------------------------------------------
! INCLUDES
^include "ESMF.h"
#include "ESMF_AttributeTestMacros.hcppF90"
!
!==============================================================================
!BOP
! !PROGRAM: ESMF_AttributeAutoLinkUTest - Attribute Tests
!
! !DESCRIPTION:
!
! The code in this file drives F90 Attribute tests.
! The companion file ESMF\_Attribute.F90 contains the definitions for the
! Attribute methods.
!
!-----------------------------------------------------------------------------
! !USES:
      use ESMF_TestMod     ! test methods
      use ESMF         ! the ESMF Framework
      implicit none

!------------------------------------------------------------------------------
! The following line turns the CVS identifier string into a printable variable.
      character(*), parameter :: version = &
      '$Id$'
!------------------------------------------------------------------------------

!-------------------------------------------------------------------------
!=========================================================================
      ! individual test failure message
      character(ESMF_MAXSTR) :: failMsg, name

      ! cumulative result: count failures; no failures equals "all pass"
      integer :: result = 0

      ! local variables
      type(ESMF_Field)       :: field
      type(ESMF_FieldBundle) :: fieldbundle
      type(ESMF_State)       :: state, state2
      type(ESMF_LocStream)   :: locstream
      integer                :: linkcount

      ! macro variables
      AttributeTestVariablesMacro()

!-------------------------------------------------------------------------------
!  The unit tests are divided into Sanity and Exhaustive. The Sanity tests are
!  always run. When the environment variable, EXHAUSTIVE, is set to ON then
!  the EXHAUSTIVE and sanity tests both run. If the EXHAUSTIVE variable is set
!  to OFF, then only the sanity unit tests.
!  Special strings (Non-exhaustive and exhaustive) have been
!  added to allow a script to count the number and types of unit tests.
!-------------------------------------------------------------------------------

  !-----------------------------------------------------------------------------
  call ESMF_TestStart(ESMF_SRCLINE, rc=rc)
  if (rc /= ESMF_SUCCESS) call ESMF_Finalize(endflag=ESMF_END_ABORT)
  !-----------------------------------------------------------------------------

      !------------------------------------------------------------------------
      ! preparations
      locstream = ESMF_LocStreamCreate(20, rc=rc)
      field = ESMF_FieldCreate(locstream, ESMF_TYPEKIND_R8, name="field", rc=rc)
      fieldbundle = ESMF_FieldBundleCreate(fieldList=(/field/), &
                                           name="fieldbundle", rc=rc)
      state = ESMF_StateCreate(name="state", rc=rc)
      state2 = ESMF_StateCreate(name="state2", rc=rc)

      if (rc .ne. ESMF_SUCCESS) call ESMF_Finalize(endflag=ESMF_END_ABORT)

    !-------------------------------------------------------------------------
    !  Attribute hierarchy linking
    !-------------------------------------------------------------------------

      !NEX_UTest
      ! Link a State Attribute hierarchy to a Field Attribute hierarchy State Test
      call ESMF_StateAdd(state, (/field/), rc=rc)
      write(failMsg, *) "Did not return ESMF_SUCCESS"
      write(name, *) "Linking a State hierarchy to a Field hierarchy Test"
      call ESMF_Test((rc==ESMF_SUCCESS), name, failMsg, result, ESMF_SRCLINE)
      !------------------------------------------------------------------------

      !NEX_UTest
      ! Check Attribute link count
      call ESMF_AttributeGet(state, count=linkcount, &
                             attcountflag=ESMF_ATTGETCOUNT_ATTLINK, rc=rc)
      write(failMsg, *) "Did not return ESMF_SUCCESS"
      write(name, *) "Check the Attribute link count"
      call ESMF_Test(((rc==ESMF_SUCCESS) &
                     .and. (linkcount == 1)), name, failMsg, result, ESMF_SRCLINE)
      !------------------------------------------------------------------------

      !NEX_UTest
      ! Link a State Attribute hierarchy to a FieldBundle Attribute hierarchy State Test
      call ESMF_StateAdd(state, (/fieldbundle/), rc=rc)
      write(failMsg, *) "Did not return ESMF_SUCCESS"
      write(name, *) "Linking a State hierarchy to a FieldBundle hierarchy Test"
      call ESMF_Test((rc==ESMF_SUCCESS), name, failMsg, result, ESMF_SRCLINE)
      !------------------------------------------------------------------------

      !NEX_UTest
      ! Check Attribute link count
      call ESMF_AttributeGet(state, count=linkcount, &
                             attcountflag=ESMF_ATTGETCOUNT_ATTLINK, rc=rc)
      write(failMsg, *) "Did not return ESMF_SUCCESS"
      write(name, *) "Check the Attribute link count"
      call ESMF_Test(((rc==ESMF_SUCCESS) &
                     .and. (linkcount == 2)), name, failMsg, result, ESMF_SRCLINE)
      !------------------------------------------------------------------------

      !NEX_UTest
      ! Link a State Attribute hierarchy to a State Attribute hierarchy State Test
      call ESMF_StateAdd(state, (/state2/), rc=rc)
      write(failMsg, *) "Did not return ESMF_SUCCESS"
      write(name, *) "Linking a State hierarchy to a State hierarchy Test"
      call ESMF_Test((rc==ESMF_SUCCESS), name, failMsg, result, ESMF_SRCLINE)
      !------------------------------------------------------------------------

      !NEX_UTest
      ! Check Attribute link count
      call ESMF_AttributeGet(state, count=linkcount, &
                             attcountflag=ESMF_ATTGETCOUNT_ATTLINK, rc=rc)
      write(failMsg, *) "Did not return ESMF_SUCCESS"
      write(name, *) "Check the Attribute link count"
      call ESMF_Test(((rc==ESMF_SUCCESS) &
                     .and. (linkcount == 3)), name, failMsg, result, ESMF_SRCLINE)
      !------------------------------------------------------------------------

      !NEX_UTest
      ! Unlink a State Attribute hierarchy from a State Attribute hierarchy State Test
      call ESMF_StateRemove(state, (/"state2"/), rc=rc)
      write(failMsg, *) "Did not return ESMF_SUCCESS"
      write(name, *) "Unlinking a State hierarchy to a State hierarchy Test"
      call ESMF_Test((rc==ESMF_SUCCESS), name, failMsg, result, ESMF_SRCLINE)
      !------------------------------------------------------------------------

      !NEX_UTest
      ! Check Attribute link count
      call ESMF_AttributeGet(state, count=linkcount, &
                             attcountflag=ESMF_ATTGETCOUNT_ATTLINK, rc=rc)
      write(failMsg, *) "Did not return ESMF_SUCCESS"
      write(name, *) "Check the Attribute link count"
      call ESMF_Test(((rc==ESMF_SUCCESS) &
                     .and. (linkcount == 2)), name, failMsg, result, ESMF_SRCLINE)
      !------------------------------------------------------------------------

      !NEX_UTest
      ! Unlink a State Attribute hierarchy from a FieldBundle Attribute hierarchy State Test
      call ESMF_StateRemove(state, (/"fieldbundle"/), rc=rc)
      write(failMsg, *) "Did not return ESMF_SUCCESS"
      write(name, *) "Unlinking a State hierarchy to a State hierarchy Test"
      call ESMF_Test((rc==ESMF_SUCCESS), name, failMsg, result, ESMF_SRCLINE)
      !------------------------------------------------------------------------

      !NEX_UTest
      ! Check Attribute link count
      call ESMF_AttributeGet(state, count=linkcount, &
                             attcountflag=ESMF_ATTGETCOUNT_ATTLINK, rc=rc)
      write(failMsg, *) "Did not return ESMF_SUCCESS"
      write(name, *) "Check the Attribute link count"
      call ESMF_Test(((rc==ESMF_SUCCESS) &
                     .and. (linkcount == 1)), name, failMsg, result, ESMF_SRCLINE)
      !------------------------------------------------------------------------

      !NEX_UTest
      ! Unlink a State Attribute hierarchy from a Field Attribute hierarchy State Test
      call ESMF_StateRemove(state, (/"field"/), rc=rc)
      write(failMsg, *) "Did not return ESMF_SUCCESS"
      write(name, *) "Unlinking a State hierarchy to a State hierarchy Test"
      call ESMF_Test((rc==ESMF_SUCCESS), name, failMsg, result, ESMF_SRCLINE)
      !------------------------------------------------------------------------

      !NEX_UTest
      ! Check Attribute link count
      call ESMF_AttributeGet(state, count=linkcount, &
                             attcountflag=ESMF_ATTGETCOUNT_ATTLINK, rc=rc)
      write(failMsg, *) "Did not return ESMF_SUCCESS"
      write(name, *) "Check the Attribute link count"
      call ESMF_Test(((rc==ESMF_SUCCESS) &
                     .and. (linkcount == 0)), name, failMsg, result, ESMF_SRCLINE)
      !------------------------------------------------------------------------


      !------------------------------------------------------------------------
      ! clean up
      call ESMF_LocStreamDestroy(locstream, rc=rc)
      call ESMF_FieldDestroy(field, rc=rc)
      call ESMF_FieldBundleDestroy(fieldbundle, rc=rc)
      call ESMF_StateDestroy(state, rc=rc)
      call ESMF_StateDestroy(state2, rc=rc)
     
      if (rc .ne. ESMF_SUCCESS) call ESMF_Finalize(endflag=ESMF_END_ABORT)

  !-----------------------------------------------------------------------------
  call ESMF_TestEnd(ESMF_SRCLINE)
  !-----------------------------------------------------------------------------
  
end program ESMF_AttributeAutoLinkUTest
